From: Hideki Yamane <henrich@debian.org>
Date: Sat, 12 Oct 2019 00:06:51 +0900
Subject: version 0.3 taken from EPEL repo

---
 VMDKstream.py | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/VMDKstream.py b/VMDKstream.py
index 1f98c0e..38f8e55 100755
--- a/VMDKstream.py
+++ b/VMDKstream.py
@@ -54,7 +54,8 @@ MARKER_FOOTER = 3 # footer (repeat of header with final info)
 SECTOR_SIZE = 512
 
 # Descriptor Template
-image_descriptor_template='''# Description file created by VMDK stream converter
+image_descriptor_template='''# Disk Descriptor File
+# Created by VMDKstream
 version=1
 # Believe this is random
 CID=7e5b80a7
@@ -78,6 +79,25 @@ ddb.longContentID = "8f15b3d0009d9a3f456ff7b28d324d2a"
 ddb.virtualHWVersion = "7"'''
 
 
+def read_sparse_header(infile):
+    #header_struct = "=IIIQQQQIQQQBccccH433B"
+    header_struct = "=IIIQQQQIQQQBccccH"
+    f = open(infile)
+    header = f.read(79)
+    decoded = struct.unpack(header_struct, header)
+    # The values in this decode are:
+    # ( MAGIC_NUMBER, formatVersion, flags, inFileSectors,
+    #   grainSize, descriptorOffset, descriptorSize, numGTEsPerGT,
+    #   rgdOffset, gdOffset, overHead, uncleanShutdown,
+    #   'n', ' ', 'r', 'n', compressAlgorithm )"""
+    f.close()
+    return decoded
+
+def vmdk_disk_size_bytes(infile):
+    decoded = read_sparse_header(infile)
+    # Size in the header is in position 4 in units of 512 byte sectors
+    return decoded[3] * 512
+
 def create_sparse_header(inFileSectors, descriptorSize,
                          gdOffset = 0xFFFFFFFFFFFFFFFF):
     # While theoretically variable we set these based on current VMWare
